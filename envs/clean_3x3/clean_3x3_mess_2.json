{"version": 1, "world": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_2", "type": "c"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_3", "type": "c"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_15", "type": "o"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_16", "type": "o"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_21", "type": "o"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_22", "type": "o"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_25", "type": "o"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_10", "type": "s"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_11", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_12", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_13", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_14", "type": "s"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_15", "type": "s"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_16", "type": "s"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_17", "type": "s"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_2", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_3", "type": "s"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_4", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_5", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_6", "type": "s"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_7", "type": "s"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_8", "type": "s"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_9", "type": "s"}, {"name": "r_1", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_2", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_3", "type": "c"}]}, {"name": "east_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "in", "arguments": [{"name": "f_0", "type": "f"}, {"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "f_1", "type": "f"}, {"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_11", "type": "o"}, {"name": "c_3", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_9", "type": "o"}, {"name": "c_2", "type": "c"}]}, {"name": "north_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "on", "arguments": [{"name": "f_2", "type": "f"}, {"name": "s_1", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_0", "type": "o"}, {"name": "s_0", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_1", "type": "o"}, {"name": "s_1", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_10", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_12", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_13", "type": "o"}, {"name": "s_12", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_14", "type": "o"}, {"name": "s_11", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_17", "type": "o"}, {"name": "s_16", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_18", "type": "o"}, {"name": "s_16", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_19", "type": "o"}, {"name": "s_17", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_2", "type": "o"}, {"name": "s_2", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_20", "type": "o"}, {"name": "s_9", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_23", "type": "o"}, {"name": "s_3", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_24", "type": "o"}, {"name": "s_11", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_26", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_27", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_28", "type": "o"}, {"name": "s_5", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_29", "type": "o"}, {"name": "s_7", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_3", "type": "o"}, {"name": "s_5", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_4", "type": "o"}, {"name": "s_4", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_5", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_6", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_7", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_8", "type": "o"}, {"name": "s_8", "type": "s"}]}, {"name": "south_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_8", "type": "r"}]}], "grammar": {"theme": "house", "names_to_exclude": ["dumbbell stand", "alarm clock", "cook table", "Gym", "treadmill", "table for pool chemicals", "toy sword", "Swimming Pool Area", "felt tip pens", "Master Bedroom", "dining table", "candles", "TV table", "sofa", "refrigerator", "swimming goggles", "dishwasher", "toy storage cabinet", "swimming fins", "wet towel", "bathroom sink", "dirty plate", "kids bed", "cheese", "TV", "business suit", "bedside table", "towel rack", "Kids Room", "sleeping lamp", "school notebooks", "centerpiece", "milk", "fantasy book", "toy car", "deodorant", "raw meat", "toothbrush", "elegant table runner", "dumbbell", "life ring", "Bathroom", "yoga mat", "study table", "bookcase", "reading table", "king size bed", "jump rope", "Library", "salt and papper shakers", "chlorine", "pool equipment rack", "gaming consol", "toilet", "toilet paper", "Dining Room", "evening dress", "detective book", null, "reading glasses", "Kitchen", "decorative pillow", "Living Room", "game consol cabinet", "wardrobe"], "include_adj": false, "blend_descriptions": false, "ambiguous_instructions": false, "only_last_action": false, "blend_instructions": false, "allowed_variables_numbering": false, "unique_expansion": false}, "quests": [], "infos": [["P", {"id": "P", "type": "P", "name": null, "noun": null, "adj": null, "desc": null, "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["I", {"id": "I", "type": "I", "name": null, "noun": null, "adj": null, "desc": null, "room_type": null, "definite": null, "indefinite": null, "synonyms": null}], ["r_1", {"id": "r_1", "type": "r", "name": "Kids Room", "noun": null, "adj": null, "desc": "Well, here we are in a Kids Room. Let's see what's in here.\n\n You make out [if c_3 is locked]a locked[else if c_3 is open]an opened[otherwise]a closed[end if] toy storage cabinet nearby.[if c_3 is open and there is something in the c_3] The toy storage cabinet contains [a list of things in the c_3].[end if][if c_3 is open and the c_3 contains nothing] The toy storage cabinet is empty! This is the worst thing that could possibly happen, ever![end if] Were you looking for a study table? Because look over there, it's a study table. [if there is something on the s_10]On the study table you can see [a list of things on the s_10].[end if][if there is nothing on the s_10]But the thing hasn't got anything on it. You make a mental note to not get your hopes up the next time you see a study table in a room.[end if] If you haven't noticed it already, there seems to be something there by the wall, it's a kids bed. The kids bed is normal.[if there is something on the s_9] On the kids bed you can make out [a list of things on the s_9].[end if][if there is nothing on the s_9] But oh no! there's nothing on this piece of garbage.[end if]\n\nThere is an exit to the east. Don't worry, it is unguarded. You don't like doors? Why not try going south, that entranceway is unguarded. You don't like doors? Why not try going west, that entranceway is unguarded.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_6", {"id": "r_6", "type": "r", "name": "Bathroom", "noun": null, "adj": null, "desc": "You arrive in a Bathroom. A typical one. Let's see what's in here.\n\n What's that over there? It looks like it's a toilet. The toilet is typical.[if there is something on the s_11] On the toilet you can see [a list of things on the s_11].[end if][if there is nothing on the s_11] But there isn't a thing on it.[end if] You can see a bathroom sink. [if there is something on the s_12]On the bathroom sink you can see [a list of things on the s_12].[end if][if there is nothing on the s_12]But the thing is empty.[end if] What's that over there? It looks like it's a towel rack. The towel rack is typical.[if there is something on the s_13] On the towel rack you can make out [a list of things on the s_13].[end if][if there is nothing on the s_13] But oh no! there's nothing on this piece of trash.[end if]\n\nThere is an exit to the east. Don't worry, it is unblocked. There is an unblocked exit to the south.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_2", {"id": "r_2", "type": "r", "name": "Dining Room", "noun": null, "adj": null, "desc": "You're now in a Dining Room. You try to gain information on your surroundings by using a technique you call 'looking.'\n\n You can see a dining table. The dining table is typical.[if there is something on the s_6] On the dining table you see [a list of things on the s_6].[end if][if there is nothing on the s_6] But the thing is empty. Oh! Why couldn't there just be stuff on it?[end if]\n\nYou need an unblocked exit? You should try going east. There is an exit to the north. Don't worry, it is unguarded. You need an unblocked exit? You should try going south. You don't like doors? Why not try going west, that entranceway is unguarded.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_3", {"id": "r_3", "type": "r", "name": "Kitchen", "noun": null, "adj": null, "desc": "You find yourself in a Kitchen. An ordinary kind of place. You can barely contain your excitement.\n\n You can make out [if c_0 is locked]a locked[else if c_0 is open]an opened[otherwise]a closed[end if] dishwasher in the corner.[if c_0 is open and there is something in the c_0] The dishwasher contains [a list of things in the c_0], so there's that.[end if][if c_0 is open and the c_0 contains nothing] The dishwasher is empty! This is the worst thing that could possibly happen, ever![end if] You see a refrigerator. You wonder idly who left that here.[if c_1 is open and there is something in the c_1] The refrigerator contains [a list of things in the c_1].[end if][if c_1 is open and the c_1 contains nothing] The refrigerator is empty, what a horrible day![end if] You scan the room for a cook table, and you find a cook table. [if there is something on the s_3]On the cook table you make out [a list of things on the s_3].[end if][if there is nothing on the s_3]But there isn't a thing on it. What, you think everything in TextWorld should have stuff on it?[end if]\n\nYou don't like doors? Why not try going east, that entranceway is unblocked. There is an exit to the north. Don't worry, it is unblocked. You don't like doors? Why not try going south, that entranceway is unguarded.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_4", {"id": "r_4", "type": "r", "name": "Living Room", "noun": null, "adj": null, "desc": "Well, here we are in a Living Room.\n\n You can see a TV table. The TV table is normal.[if there is something on the s_0] On the TV table you can see [a list of things on the s_0].[end if][if there is nothing on the s_0] However, the TV table, like an empty TV table, has nothing on it.[end if] You can see a sofa. The sofa is ordinary.[if there is something on the s_1] On the sofa you see [a list of things on the s_1].[end if][if there is nothing on the s_1] The sofa appears to be empty. It would have been so cool if there was stuff on the sofa! oh well.[end if] You make out a game consol cabinet. The game consol cabinet is standard.[if there is something on the s_2] On the game consol cabinet you can make out [a list of things on the s_2]. Huh, weird.[end if][if there is nothing on the s_2] But there isn't a thing on it.[end if]\n\nYou need an unblocked exit? You should try going south. You need an unguarded exit? You should try going west.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_5", {"id": "r_5", "type": "r", "name": "Master Bedroom", "noun": null, "adj": null, "desc": "You are in a Master Bedroom. A typical kind of place.\n\n You can see [if c_2 is locked]a locked[else if c_2 is open]an opened[otherwise]a closed[end if] ordinary looking wardrobe in the corner.[if c_2 is open and there is something in the c_2] The wardrobe contains [a list of things in the c_2].[end if][if c_2 is open and the c_2 contains nothing] The wardrobe is empty! What a waste of a day![end if] You can see a king size bed. The king size bed is standard.[if there is something on the s_7] On the king size bed you can see [a list of things on the s_7].[end if][if there is nothing on the s_7] Unfortunately, there isn't a thing on it. Aw, here you were, all excited for there to be things on it![end if] You can make out a bedside table. Make a note of this, you might have to put stuff on or in it later on. The bedside table is typical.[if there is something on the s_8] On the bedside table you see [a list of things on the s_8]. Huh, weird.[end if][if there is nothing on the s_8] But the thing is empty. Hm. Oh well[end if]\n\nThere is an exit to the north. Don't worry, it is unguarded. You need an unguarded exit? You should try going south. There is an unblocked exit to the west.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_7", {"id": "r_7", "type": "r", "name": "Swimming Pool Area", "noun": null, "adj": null, "desc": "You are in a Swimming Pool Area. It seems to be pretty usual here. You start to take note of what's in the room.\n\n You hear a noise behind you and spin around, but you can't see anything other than a pool equipment rack. [if there is something on the s_16]You see [a list of things on the s_16] on the pool equipment rack.[end if][if there is nothing on the s_16]But the thing is empty, unfortunately.[end if] You make out a table for pool chemicals. [if there is something on the s_17]On the table for pool chemicals you can make out [a list of things on the s_17].[end if][if there is nothing on the s_17]But there isn't a thing on it. It would have been so cool if there was stuff on the table for pool chemicals.[end if]\n\nYou need an unguarded exit? You should try going east. There is an unguarded exit to the north. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_0", {"id": "r_0", "type": "r", "name": "Gym", "noun": null, "adj": null, "desc": "Guess what, you are in a place we're calling a Gym.\n\n You see a dumbbell stand. [if there is something on the s_14]You see [a list of things on the s_14] on the dumbbell stand.[end if][if there is nothing on the s_14]But there isn't a thing on it.[end if] You make out a treadmill. [if there is something on the s_15]On the treadmill you can see [a list of things on the s_15].[end if][if there is nothing on the s_15]However, the treadmill, like an empty treadmill, has nothing on it.[end if]\n\nYou need an unblocked exit? You should try going east. There is an unblocked exit to the north.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_8", {"id": "r_8", "type": "r", "name": "Library", "noun": null, "adj": null, "desc": "You've entered a Library.\n\n You can see a bookcase. [if there is something on the s_4]On the bookcase you see [a list of things on the s_4].[end if][if there is nothing on the s_4]Looks like someone's already been here and taken everything off it, though.[end if] You make out a reading table. [if there is something on the s_5]On the reading table you make out [a list of things on the s_5].[end if][if there is nothing on the s_5]But the thing is empty. Oh! Why couldn't there just be stuff on it?[end if]\n\nThere is an unguarded exit to the north. There is an unblocked exit to the west.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_0", {"id": "c_0", "type": "c", "name": "dishwasher", "noun": null, "adj": null, "desc": "dishwasher", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_1", {"id": "c_1", "type": "c", "name": "refrigerator", "noun": null, "adj": null, "desc": "refrigerator", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_2", {"id": "c_2", "type": "c", "name": "wardrobe", "noun": null, "adj": null, "desc": "normal wardrobe", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["c_3", {"id": "c_3", "type": "c", "name": "toy storage cabinet", "noun": null, "adj": null, "desc": "toy storage cabinet", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_15", {"id": "o_15", "type": "o", "name": "yoga mat", "noun": null, "adj": null, "desc": "yoga mat", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_16", {"id": "o_16", "type": "o", "name": "jump rope", "noun": null, "adj": null, "desc": "jump rope", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_21", {"id": "o_21", "type": "o", "name": "fantasy book", "noun": null, "adj": null, "desc": "a tale about elf wizard", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_22", {"id": "o_22", "type": "o", "name": "elegant table runner", "noun": null, "adj": null, "desc": "ornamented dining table runner", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_25", {"id": "o_25", "type": "o", "name": "toy car", "noun": null, "adj": null, "desc": "small toy racing car", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_0", {"id": "s_0", "type": "s", "name": "TV table", "noun": null, "adj": null, "desc": "TV table", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_1", {"id": "s_1", "type": "s", "name": "sofa", "noun": null, "adj": null, "desc": "sofa", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_10", {"id": "s_10", "type": "s", "name": "study table", "noun": null, "adj": null, "desc": "study table", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_11", {"id": "s_11", "type": "s", "name": "toilet", "noun": null, "adj": null, "desc": "toilet", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_12", {"id": "s_12", "type": "s", "name": "bathroom sink", "noun": null, "adj": null, "desc": "bathroom sink", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_13", {"id": "s_13", "type": "s", "name": "towel rack", "noun": null, "adj": null, "desc": "towel rack", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_14", {"id": "s_14", "type": "s", "name": "dumbbell stand", "noun": null, "adj": null, "desc": "dumbbell stand", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_15", {"id": "s_15", "type": "s", "name": "treadmill", "noun": null, "adj": null, "desc": "treadmill", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_16", {"id": "s_16", "type": "s", "name": "pool equipment rack", "noun": null, "adj": null, "desc": "pool equipment rack", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_17", {"id": "s_17", "type": "s", "name": "table for pool chemicals", "noun": null, "adj": null, "desc": "table for pool chemicals", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_2", {"id": "s_2", "type": "s", "name": "game consol cabinet", "noun": null, "adj": null, "desc": "game consol cabinet", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_3", {"id": "s_3", "type": "s", "name": "cook table", "noun": null, "adj": null, "desc": "cook table", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_4", {"id": "s_4", "type": "s", "name": "bookcase", "noun": null, "adj": null, "desc": "bookcase", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_5", {"id": "s_5", "type": "s", "name": "reading table", "noun": null, "adj": null, "desc": "reading glasses", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_6", {"id": "s_6", "type": "s", "name": "dining table", "noun": null, "adj": null, "desc": "dining table", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_7", {"id": "s_7", "type": "s", "name": "king size bed", "noun": null, "adj": null, "desc": "king size bed", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_8", {"id": "s_8", "type": "s", "name": "bedside table", "noun": null, "adj": null, "desc": "normal bedside table", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_9", {"id": "s_9", "type": "s", "name": "kids bed", "noun": null, "adj": null, "desc": "kids bed", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["f_0", {"id": "f_0", "type": "f", "name": "milk", "noun": null, "adj": null, "desc": "milk", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["f_1", {"id": "f_1", "type": "f", "name": "cheese", "noun": null, "adj": null, "desc": "cheese", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_11", {"id": "o_11", "type": "o", "name": "toy sword", "noun": null, "adj": null, "desc": "toy sword", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_9", {"id": "o_9", "type": "o", "name": "evening dress", "noun": null, "adj": null, "desc": "beautifull evening dress", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["f_2", {"id": "f_2", "type": "f", "name": "raw meat", "noun": null, "adj": null, "desc": "peace of raw meat", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_0", {"id": "o_0", "type": "o", "name": "TV", "noun": null, "adj": null, "desc": "TV", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_1", {"id": "o_1", "type": "o", "name": "decorative pillow", "noun": null, "adj": null, "desc": "decorative pillow", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_10", {"id": "o_10", "type": "o", "name": "school notebooks", "noun": null, "adj": null, "desc": "school notebooks", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_12", {"id": "o_12", "type": "o", "name": "felt tip pens", "noun": null, "adj": null, "desc": "felt tip pens", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_13", {"id": "o_13", "type": "o", "name": "deodorant", "noun": null, "adj": null, "desc": "deodorant", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_14", {"id": "o_14", "type": "o", "name": "toilet paper", "noun": null, "adj": null, "desc": "toilet paper", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_17", {"id": "o_17", "type": "o", "name": "swimming goggles", "noun": null, "adj": null, "desc": "swimming goggles", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_18", {"id": "o_18", "type": "o", "name": "life ring", "noun": null, "adj": null, "desc": "life ring", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_19", {"id": "o_19", "type": "o", "name": "chlorine", "noun": null, "adj": null, "desc": "chlorine", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_2", {"id": "o_2", "type": "o", "name": "gaming consol", "noun": null, "adj": null, "desc": "gaming consol", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_20", {"id": "o_20", "type": "o", "name": "dirty plate", "noun": null, "adj": null, "desc": "dirty dining plate", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_23", {"id": "o_23", "type": "o", "name": "business suit", "noun": null, "adj": null, "desc": "expensive grey business suit", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_24", {"id": "o_24", "type": "o", "name": "sleeping lamp", "noun": null, "adj": null, "desc": "soft light sleeping lamp", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_26", {"id": "o_26", "type": "o", "name": "toothbrush", "noun": null, "adj": null, "desc": "ordinary toothbrush", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_27", {"id": "o_27", "type": "o", "name": "dumbbell", "noun": null, "adj": null, "desc": "heavy dumbbell", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_28", {"id": "o_28", "type": "o", "name": "swimming fins", "noun": null, "adj": null, "desc": "blue swimming fins that are used for swimming", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_29", {"id": "o_29", "type": "o", "name": "wet towel", "noun": null, "adj": null, "desc": "red wet bathroom towel", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_3", {"id": "o_3", "type": "o", "name": "reading glasses", "noun": null, "adj": null, "desc": "reading glasses", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_4", {"id": "o_4", "type": "o", "name": "detective book", "noun": null, "adj": null, "desc": "detective book", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_5", {"id": "o_5", "type": "o", "name": "centerpiece", "noun": null, "adj": null, "desc": "centerpiece", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_6", {"id": "o_6", "type": "o", "name": "candles", "noun": null, "adj": null, "desc": "candles", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_7", {"id": "o_7", "type": "o", "name": "salt and papper shakers", "noun": null, "adj": null, "desc": "salt and papper shakers", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_8", {"id": "o_8", "type": "o", "name": "alarm clock", "noun": null, "adj": null, "desc": "normal alarm clock", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}]], "KB": {"logic": "# Inventory\ntype I {\n    predicates {\n        in(o, I);\n    }\n\n    rules {\n        inventory :: at(P, r) -> at(P, r);  # Nothing changes.\n\n        take :: $at(P, r) & at(o, r) -> in(o, I);\n        drop :: $at(P, r) & in(o, I) -> at(o, r);\n\n        take/c :: $at(P, r) & $at(c, r) & $open(c) & in(o, c) -> in(o, I);\n        insert :: $at(P, r) & $at(c, r) & $open(c) & in(o, I) -> in(o, c);\n\n        take/s :: $at(P, r) & $at(s, r) & on(o, s) -> in(o, I);\n        put    :: $at(P, r) & $at(s, r) & in(o, I) -> on(o, s);\n\n        examine/I :: in(o, I) -> in(o, I);  # Nothing changes.\n        examine/s :: at(P, r) & $at(s, r) & $on(o, s) -> at(P, r);  # Nothing changes.\n        examine/c :: at(P, r) & $at(c, r) & $open(c) & $in(o, c) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        inventory :: inventory;\n\n        take :: drop;\n        take/c :: insert;\n        take/s :: put;\n\n        examine/I :: examine/I;\n        examine/s :: examine/s;\n        examine/c :: examine/c;\n    }\n\n    inform7 {\n        predicates {\n            in(o, I) :: \"The player carries the {o}\";\n        }\n\n        commands {\n            take :: \"take {o}\" :: \"taking the {o}\";\n            drop :: \"drop {o}\" :: \"dropping the {o}\";\n\n            take/c :: \"take {o} from {c}\" :: \"removing the {o} from the {c}\";\n            insert :: \"insert {o} into {c}\" :: \"inserting the {o} into the {c}\";\n\n            take/s :: \"take {o} from {s}\" :: \"removing the {o} from the {s}\";\n            put :: \"put {o} on {s}\" :: \"putting the {o} on the {s}\";\n\n            inventory :: \"inventory\" :: \"taking inventory\";\n\n            examine/I :: \"examine {o}\" :: \"examining the {o}\";\n            examine/s :: \"examine {o}\" :: \"examining the {o}\";\n            examine/c :: \"examine {o}\" :: \"examining the {o}\";\n        }\n    }\n}\n\n# key\ntype k : o {\n    predicates {\n        match(k, c);\n        match(k, d);\n    }\n\n    constraints {\n        k1 :: match(k, c) & match(k', c) -> fail();\n        k2 :: match(k, c) & match(k, c') -> fail();\n        k3 :: match(k, d) & match(k', d) -> fail();\n        k4 :: match(k, d) & match(k, d') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"key\";\n        }\n\n        predicates {\n            match(k, c) :: \"The matching key of the {c} is the {k}\";\n            match(k, d) :: \"The matching key of the {d} is the {k}\";\n        }\n    }\n}\n\n# door\ntype d : t {\n    predicates {\n        open(d);\n        closed(d);\n        locked(d);\n\n        link(r, d, r);\n    }\n\n    rules {\n        lock/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & closed(d) -> locked(d);\n        unlock/d :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & locked(d) -> closed(d);\n\n        open/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & closed(d) -> open(d) & free(r, r') & free(r', r);\n        close/d  :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & open(d) & free(r, r') & free(r', r) -> closed(d);\n\n        examine/d :: at(P, r) & $link(r, d, r') -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        lock/d :: unlock/d;\n        open/d :: close/d;\n\n        examine/d :: examine/d;\n    }\n\n    constraints {\n        d1 :: open(d)   & closed(d) -> fail();\n        d2 :: open(d)   & locked(d) -> fail();\n        d3 :: closed(d) & locked(d) -> fail();\n\n        # A door can't be used to link more than two rooms.\n        link1 :: link(r, d, r') & link(r, d, r'') -> fail();\n        link2 :: link(r, d, r') & link(r'', d, r''') -> fail();\n\n        # There's already a door linking two rooms.\n        link3 :: link(r, d, r') & link(r, d', r') -> fail();\n\n        # There cannot be more than four doors in a room.\n        too_many_doors :: link(r, d1: d, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        # There cannot be more than four doors in a room.\n        dr1 :: free(r, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr2 :: free(r, r1: r) & free(r, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr3 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr4 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & free(r, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        free1 :: link(r, d, r') & free(r, r') & closed(d) -> fail();\n        free2 :: link(r, d, r') & free(r, r') & locked(d) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"door\";\n            definition :: \"door is openable and lockable.\";\n        }\n\n        predicates {\n            open(d) :: \"The {d} is open\";\n            closed(d) :: \"The {d} is closed\";\n            locked(d) :: \"The {d} is locked\";\n            link(r, d, r') :: \"\";  # No equivalent in Inform7.\n        }\n\n        commands {\n            open/d :: \"open {d}\" :: \"opening {d}\";\n            close/d :: \"close {d}\" :: \"closing {d}\";\n\n            unlock/d :: \"unlock {d} with {k}\" :: \"unlocking {d} with the {k}\";\n            lock/d :: \"lock {d} with {k}\" :: \"locking {d} with the {k}\";\n\n            examine/d :: \"examine {d}\" :: \"examining {d}\";\n        }\n    }\n}\n\n# food\ntype f : o {\n    predicates {\n        edible(f);\n        eaten(f);\n    }\n\n    rules {\n        eat :: in(f, I) -> eaten(f);\n    }\n\n    constraints {\n        eaten1 :: eaten(f) & in(f, I) -> fail();\n        eaten2 :: eaten(f) & in(f, c) -> fail();\n        eaten3 :: eaten(f) & on(f, s) -> fail();\n        eaten4 :: eaten(f) & at(f, r) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"food\";\n            definition :: \"food is edible.\";\n        }\n\n        predicates {\n            edible(f) :: \"The {f} is edible\";\n            eaten(f) :: \"The {f} is nowhere\";\n        }\n\n        commands {\n            eat :: \"eat {f}\" :: \"eating the {f}\";\n        }\n    }\n}\n\n# object\ntype o : t {\n    constraints {\n        obj1 :: in(o, I) & in(o, c) -> fail();\n        obj2 :: in(o, I) & on(o, s) -> fail();\n        obj3 :: in(o, I) & at(o, r) -> fail();\n        obj4 :: in(o, c) & on(o, s) -> fail();\n        obj5 :: in(o, c) & at(o, r) -> fail();\n        obj6 :: on(o, s) & at(o, r) -> fail();\n        obj7 :: at(o, r) & at(o, r') -> fail();\n        obj8 :: in(o, c) & in(o, c') -> fail();\n        obj9 :: on(o, s) & on(o, s') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"object-like\";\n            definition :: \"object-like is portable.\";\n        }\n    }\n}\n\n# room\ntype r {\n    predicates {\n        at(P, r);\n        at(t, r);\n\n        north_of(r, r);\n        west_of(r, r);\n\n        north_of/d(r, d, r);\n        west_of/d(r, d, r);\n\n        free(r, r);\n\n        south_of(r, r') = north_of(r', r);\n        east_of(r, r') = west_of(r', r);\n\n        south_of/d(r, d, r') = north_of/d(r', d, r);\n        east_of/d(r, d, r') = west_of/d(r', d, r);\n    }\n\n    rules {\n        go/north :: at(P, r) & $north_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/south :: at(P, r) & $south_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/east  :: at(P, r) & $east_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/west  :: at(P, r) & $west_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n    }\n\n    reverse_rules {\n        go/north :: go/south;\n        go/west :: go/east;\n    }\n\n    constraints {\n        r1 :: at(P, r) & at(P, r') -> fail();\n        r2 :: at(s, r) & at(s, r') -> fail();\n        r3 :: at(c, r) & at(c, r') -> fail();\n\n        # An exit direction can only lead to one room.\n        nav_rr1 :: north_of(r, r') & north_of(r'', r') -> fail();\n        nav_rr2 :: south_of(r, r') & south_of(r'', r') -> fail();\n        nav_rr3 :: east_of(r, r') & east_of(r'', r') -> fail();\n        nav_rr4 :: west_of(r, r') & west_of(r'', r') -> fail();\n\n        # Two rooms can only be connected once with each other.\n        nav_rrA :: north_of(r, r') & south_of(r, r') -> fail();\n        nav_rrB :: north_of(r, r') & west_of(r, r') -> fail();\n        nav_rrC :: north_of(r, r') & east_of(r, r') -> fail();\n        nav_rrD :: south_of(r, r') & west_of(r, r') -> fail();\n        nav_rrE :: south_of(r, r') & east_of(r, r') -> fail();\n        nav_rrF :: west_of(r, r')  & east_of(r, r') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"room\";\n        }\n\n        predicates {\n            at(P, r) :: \"The player is in {r}\";\n            at(t, r) :: \"The {t} is in {r}\";\n            free(r, r') :: \"\";  # No equivalent in Inform7.\n\n            north_of(r, r') :: \"The {r} is mapped north of {r'}\";\n            south_of(r, r') :: \"The {r} is mapped south of {r'}\";\n            east_of(r, r') :: \"The {r} is mapped east of {r'}\";\n            west_of(r, r') :: \"The {r} is mapped west of {r'}\";\n\n            north_of/d(r, d, r') :: \"South of {r} and north of {r'} is a door called {d}\";\n            south_of/d(r, d, r') :: \"North of {r} and south of {r'} is a door called {d}\";\n            east_of/d(r, d, r') :: \"West of {r} and east of {r'} is a door called {d}\";\n            west_of/d(r, d, r') :: \"East of {r} and west of {r'} is a door called {d}\";\n        }\n\n        commands {\n            go/north :: \"go north\" :: \"going north\";\n            go/south :: \"go south\" :: \"going south\";\n            go/east :: \"go east\" :: \"going east\";\n            go/west :: \"go west\" :: \"going west\";\n        }\n    }\n}\n\n# Player\ntype P {\n    rules {\n        look :: at(P, r) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        look :: look;\n    }\n\n    inform7 {\n        commands {\n            look :: \"look\" :: \"looking\";\n        }\n    }\n}\n\n# thing\ntype t {\n    rules {\n        examine/t :: at(P, r) & $at(t, r) -> at(P, r);\n    }\n\n    reverse_rules {\n        examine/t :: examine/t;\n    }\n\n    inform7 {\n        type {\n            kind :: \"thing\";\n        }\n\n        commands {\n            examine/t :: \"examine {t}\" :: \"examining the {t}\";\n        }\n    }\n}\n\n# container\ntype c : t {\n    predicates {\n        open(c);\n        closed(c);\n        locked(c);\n\n        in(o, c);\n    }\n\n    rules {\n        lock/c   :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & closed(c) -> locked(c);\n        unlock/c :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & locked(c) -> closed(c);\n\n        open/c  :: $at(P, r) & $at(c, r) & closed(c) -> open(c);\n        close/c :: $at(P, r) & $at(c, r) & open(c) -> closed(c);\n    }\n\n    reverse_rules {\n        lock/c :: unlock/c;\n        open/c :: close/c;\n    }\n\n    constraints {\n        c1 :: open(c)   & closed(c) -> fail();\n        c2 :: open(c)   & locked(c) -> fail();\n        c3 :: closed(c) & locked(c) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"container\";\n            definition :: \"containers are openable, lockable and fixed in place. containers are usually closed.\";\n        }\n\n        predicates {\n            open(c) :: \"The {c} is open\";\n            closed(c) :: \"The {c} is closed\";\n            locked(c) :: \"The {c} is locked\";\n\n            in(o, c) :: \"The {o} is in the {c}\";\n        }\n\n        commands {\n            open/c :: \"open {c}\" :: \"opening the {c}\";\n            close/c :: \"close {c}\" :: \"closing the {c}\";\n\n            lock/c :: \"lock {c} with {k}\" :: \"locking the {c} with the {k}\";\n            unlock/c :: \"unlock {c} with {k}\" :: \"unlocking the {c} with the {k}\";\n        }\n    }\n}\n\n# supporter\ntype s : t {\n    predicates {\n        on(o, s);\n    }\n\n    inform7 {\n        type {\n            kind :: \"supporter\";\n            definition :: \"supporters are fixed in place.\";\n        }\n\n        predicates {\n            on(o, s) :: \"The {o} is on the {s}\";\n        }\n    }\n}\n\n", "text_grammars_path": "/home/petranokhin/anaconda3/envs/jericho/lib/python3.10/site-packages/textworld/generator/data/text_grammars"}, "metadata": {"desc": "Generated with textworld.GameMaker."}, "objective": ""}