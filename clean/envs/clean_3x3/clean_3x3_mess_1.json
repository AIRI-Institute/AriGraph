{"version": 1, "world": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_2", "type": "c"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_3", "type": "c"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_4", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_22", "type": "o"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_23", "type": "o"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_26", "type": "o"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_10", "type": "s"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_11", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_12", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_13", "type": "s"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_14", "type": "s"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_15", "type": "s"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_16", "type": "s"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_17", "type": "s"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_2", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_3", "type": "s"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_4", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_5", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_6", "type": "s"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_7", "type": "s"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_8", "type": "s"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_9", "type": "s"}, {"name": "r_1", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_2", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_3", "type": "c"}]}, {"name": "east_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "in", "arguments": [{"name": "f_0", "type": "f"}, {"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "f_1", "type": "f"}, {"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_10", "type": "o"}, {"name": "c_2", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_12", "type": "o"}, {"name": "c_3", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_16", "type": "o"}, {"name": "c_4", "type": "c"}]}, {"name": "in", "arguments": [{"name": "o_17", "type": "o"}, {"name": "c_4", "type": "c"}]}, {"name": "north_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "on", "arguments": [{"name": "f_2", "type": "f"}, {"name": "s_1", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_0", "type": "o"}, {"name": "s_0", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_1", "type": "o"}, {"name": "s_1", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_11", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_13", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_14", "type": "o"}, {"name": "s_12", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_15", "type": "o"}, {"name": "s_11", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_18", "type": "o"}, {"name": "s_16", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_19", "type": "o"}, {"name": "s_16", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_2", "type": "o"}, {"name": "s_2", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_20", "type": "o"}, {"name": "s_17", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_21", "type": "o"}, {"name": "s_9", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_24", "type": "o"}, {"name": "s_3", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_25", "type": "o"}, {"name": "s_11", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_27", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_28", "type": "o"}, {"name": "s_10", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_29", "type": "o"}, {"name": "s_5", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_3", "type": "o"}, {"name": "s_5", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_30", "type": "o"}, {"name": "s_7", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_4", "type": "o"}, {"name": "s_4", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_5", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_6", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_7", "type": "o"}, {"name": "s_6", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_8", "type": "o"}, {"name": "s_8", "type": "s"}]}, {"name": "on", "arguments": [{"name": "o_9", "type": "o"}, {"name": "s_8", "type": "s"}]}, {"name": "south_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_8", "type": "r"}]}], "grammar": {"theme": "house", "names_to_exclude": ["business suit", "Master Bedroom", "wardrobe", "chlorine", "dishwasher", "towel rack", "reading glasses", "salt and papper shakers", "bookcase", "alarm clock", "evening dress", "toilet paper", "Living Room", "toy car", "toothbrush", "detective book", "bathroom sink", "swimming fins", "reading table", "decorative pillow", "TV", "table for pool chemicals", "Dining Room", "kids bed", "jump rope", "felt tip pens", "Gym", "fantasy book", "sofa", "cook table", "life ring", "yoga mat", "toy sword", "toy storage cabinet", "bed lamp", "refrigerator", "milk", "dumbbell stand", "toilet", "school notebooks", "Kids Room", "dirty plate", "dining table", "wet towel", "candles", "bedside table", "TV table", "gaming consol", "raw meat", "Swimming Pool Area", "dumbbell", "sleeping lamp", "game consol cabinet", "treadmill", "deodorant", "centerpiece", "Bathroom", null, "Kitchen", "cheese", "Library", "elegant table runner", "king size bed", "swimming goggles", "pool equipment rack", "study table", "sport equipment locker"], "include_adj": false, "blend_descriptions": false, "ambiguous_instructions": false, "only_last_action": false, "blend_instructions": false, "allowed_variables_numbering": false, "unique_expansion": false}, "quests": [], "infos": [["P", {"id": "P", "type": "P", "name": null, "noun": null, "adj": null, "desc": null, "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["I", {"id": "I", "type": "I", "name": null, "noun": null, "adj": null, "desc": null, "room_type": null, "definite": null, "indefinite": null, "synonyms": null}], ["r_1", {"id": "r_1", "type": "r", "name": "Kids Room", "noun": null, "adj": null, "desc": "You've entered a Kids Room.\n\n Look out! It's a- oh, never mind, it's just a toy storage cabinet.[if c_3 is open and there is something in the c_3] The toy storage cabinet contains [a list of things in the c_3].[end if][if c_3 is open and the c_3 contains nothing] The toy storage cabinet is empty! This is the worst thing that could possibly happen, ever![end if] You hear a noise behind you and spin around, but you can't see anything other than a study table. The study table is typical.[if there is something on the s_10] On the study table you make out [a list of things on the s_10].[end if][if there is nothing on the s_10] However, the study table, like an empty study table, has nothing on it. What, you think everything in TextWorld should have stuff on it?[end if] You can make out a kids bed. You wonder idly who left that here. [if there is something on the s_9]On the kids bed you can make out [a list of things on the s_9].[end if][if there is nothing on the s_9]But oh no! there's nothing on this piece of garbage. Aw, and here you were, all excited for there to be things on it![end if]\n\nYou don't like doors? Why not try going east, that entranceway is unguarded. You don't like doors? Why not try going south, that entranceway is unblocked. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_6", {"id": "r_6", "type": "r", "name": "Bathroom", "noun": null, "adj": null, "desc": "You find yourself in a Bathroom. A typical one.\n\n You scan the room for a toilet, and you find a toilet. The toilet is typical.[if there is something on the s_11] On the toilet you make out [a list of things on the s_11].[end if][if there is nothing on the s_11] Looks like someone's already been here and taken everything off it, though. Oh! Why couldn't there just be stuff on it?[end if] You see a bathroom sink. Why don't you take a picture of it, it'll last longer! [if there is something on the s_12]You see [a list of things on the s_12] on the bathroom sink.[end if][if there is nothing on the s_12]But the thing is empty, unfortunately.[end if] Hey, want to see a towel rack? Look over there, a towel rack. You shudder, but continue examining the towel rack. [if there is something on the s_13]On the towel rack you make out [a list of things on the s_13].[end if][if there is nothing on the s_13]But the thing is empty. You move on, clearly done caring about TextWorld.[end if]\n\nThere is an exit to the east. Don't worry, it is unblocked. There is an exit to the south. Don't worry, it is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_2", {"id": "r_2", "type": "r", "name": "Dining Room", "noun": null, "adj": null, "desc": "Look around you. Take it all in. It's not every day someone gets to be in a Dining Room. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n You make out a dining table. [if there is something on the s_6]On the dining table you can make out [a list of things on the s_6]. Something scurries by right in the corner of your eye. Probably nothing.[end if][if there is nothing on the s_6]Unfortunately, there isn't a thing on it.[end if]\n\nThere is an unguarded exit to the east. There is an exit to the north. Don't worry, it is unguarded. There is an unguarded exit to the south. There is an unblocked exit to the west.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_3", {"id": "r_3", "type": "r", "name": "Kitchen", "noun": null, "adj": null, "desc": "You've just sauntered into a Kitchen.\n\n You can make out [if c_0 is locked]a locked[else if c_0 is open]an opened[otherwise]a closed[end if] dishwasher here.[if c_0 is open and there is something in the c_0] The dishwasher contains [a list of things in the c_0]. Suddenly, you bump your head on the ceiling, but it's not such a bad bump that it's going to prevent you from looking at objects and even things.[end if][if c_0 is open and the c_0 contains nothing] What a letdown! The dishwasher is empty![end if] You make out [if c_1 is locked]a locked[else if c_1 is open]an opened[otherwise]a closed[end if] refrigerator in the corner.[if c_1 is open and there is something in the c_1] The refrigerator contains [a list of things in the c_1]. Wow, isn't TextWorld just the best?[end if][if c_1 is open and the c_1 contains nothing] The refrigerator is empty! This is the worst thing that could possibly happen, ever![end if] You can see a cook table! [if there is something on the s_3]On the cook table you can make out [a list of things on the s_3].[end if][if there is nothing on the s_3]The cook table appears to be empty. Hm. Oh well[end if]\n\nThere is an unblocked exit to the east. There is an exit to the north. Don't worry, it is unguarded. You need an unguarded exit? You should try going south.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_4", {"id": "r_4", "type": "r", "name": "Living Room", "noun": null, "adj": null, "desc": "You've entered a Living Room. You can barely contain your excitement.\n\n You make out a TV table. [if there is something on the s_0]On the TV table you make out [a list of things on the s_0]. You shudder, but continue examining the room.[end if][if there is nothing on the s_0]But the thing is empty.[end if] What's that over there? It looks like it's a sofa. The sofa is ordinary.[if there is something on the s_1] On the sofa you can make out [a list of things on the s_1].[end if][if there is nothing on the s_1] But there isn't a thing on it.[end if] You scan the room, seeing a game consol cabinet. [if there is something on the s_2]On the game consol cabinet you make out [a list of things on the s_2].[end if][if there is nothing on the s_2]But the thing is empty, unfortunately. It would have been so cool if there was stuff on the game consol cabinet.[end if]\n\nThere is an unblocked exit to the south. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_5", {"id": "r_5", "type": "r", "name": "Master Bedroom", "noun": null, "adj": null, "desc": "You've just sauntered into a Master Bedroom. You try to gain information on your surroundings by using a technique you call 'looking.'\n\n You see a wardrobe.[if c_2 is open and there is something in the c_2] The wardrobe contains [a list of things in the c_2].[end if][if c_2 is open and the c_2 contains nothing] The wardrobe is empty! This is the worst thing that could possibly happen, ever![end if] Look out! It's a- oh, never mind, it's just a king size bed. [if there is something on the s_7]On the king size bed you can make out [a list of things on the s_7].[end if][if there is nothing on the s_7]But there isn't a thing on it.[end if] You can make out a bedside table. [if there is something on the s_8]On the bedside table you can make out [a list of things on the s_8]. You shudder, but continue examining the room.[end if][if there is nothing on the s_8]But the thing hasn't got anything on it. Aw, here you were, all excited for there to be things on it![end if]\n\nThere is an unblocked exit to the north. You need an unguarded exit? You should try going south. You need an unblocked exit? You should try going west.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_7", {"id": "r_7", "type": "r", "name": "Swimming Pool Area", "noun": null, "adj": null, "desc": "You find yourself in a Swimming Pool Area. A normal kind of place. The room is well lit.\n\n You make out a pool equipment rack. The pool equipment rack is typical.[if there is something on the s_16] On the pool equipment rack you can make out [a list of things on the s_16].[end if][if there is nothing on the s_16] But the thing is empty.[end if] You scan the room for a table for pool chemicals, and you find a table for pool chemicals. The table for pool chemicals is standard.[if there is something on the s_17] On the table for pool chemicals you can see [a list of things on the s_17].[end if][if there is nothing on the s_17] The table for pool chemicals appears to be empty.[end if]\n\nThere is an exit to the east. Don't worry, it is unguarded. You don't like doors? Why not try going north, that entranceway is unguarded. There is an unguarded exit to the west.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_0", {"id": "r_0", "type": "r", "name": "Gym", "noun": null, "adj": null, "desc": "You've entered a Gym.\n\n You see a sport equipment locker.[if c_4 is open and there is something in the c_4] The sport equipment locker contains [a list of things in the c_4]. Huh, weird.[end if][if c_4 is open and the c_4 contains nothing] The sport equipment locker is empty! What a waste of a day![end if] You make out a dumbbell stand. The dumbbell stand is usual.[if there is something on the s_14] On the dumbbell stand you can see [a list of things on the s_14]. I mean, just wow! Isn't TextWorld just the best?[end if][if there is nothing on the s_14] But the thing is empty. What, you think everything in TextWorld should have stuff on it?[end if] You can see a treadmill. [if there is something on the s_15]You see [a list of things on the s_15] on the treadmill.[end if][if there is nothing on the s_15]The treadmill appears to be empty. Hopefully this doesn't make you too upset.[end if]\n\nThere is an unblocked exit to the east. You don't like doors? Why not try going north, that entranceway is unguarded.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_8", {"id": "r_8", "type": "r", "name": "Library", "noun": null, "adj": null, "desc": "Well I'll be, you are in the place we're calling the Library.\n\n You smell an awful smell, and follow it to a bookcase. [if there is something on the s_4]You see [a list of things on the s_4] on the bookcase.[end if][if there is nothing on the s_4]Unfortunately, there isn't a thing on it.[end if] You make out a reading table. [if there is something on the s_5]On the reading table you make out [a list of things on the s_5].[end if][if there is nothing on the s_5]Looks like someone's already been here and taken everything off it, though.[end if]\n\nThere is an exit to the north. Don't worry, it is unguarded. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_0", {"id": "c_0", "type": "c", "name": "dishwasher", "noun": null, "adj": null, "desc": "The dishwasher looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_1", {"id": "c_1", "type": "c", "name": "refrigerator", "noun": null, "adj": null, "desc": "The refrigerator looks strong, and impossible to crack. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_2", {"id": "c_2", "type": "c", "name": "wardrobe", "noun": null, "adj": null, "desc": "The wardrobe looks strong, and impossible to break. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["c_3", {"id": "c_3", "type": "c", "name": "toy storage cabinet", "noun": null, "adj": null, "desc": "The toy storage cabinet looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_4", {"id": "c_4", "type": "c", "name": "sport equipment locker", "noun": null, "adj": null, "desc": "The sport equipment locker looks strong, and impossible to destroy. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_22", {"id": "o_22", "type": "o", "name": "fantasy book", "noun": null, "adj": null, "desc": "a tale about elf wizard", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_23", {"id": "o_23", "type": "o", "name": "elegant table runner", "noun": null, "adj": null, "desc": "ornamented dining table runner", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_26", {"id": "o_26", "type": "o", "name": "toy car", "noun": null, "adj": null, "desc": "small toy racing car", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_0", {"id": "s_0", "type": "s", "name": "TV table", "noun": null, "adj": null, "desc": "The TV table is durable.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_1", {"id": "s_1", "type": "s", "name": "sofa", "noun": null, "adj": null, "desc": "The sofa is solid.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_10", {"id": "s_10", "type": "s", "name": "study table", "noun": null, "adj": null, "desc": "The study table is shaky.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_11", {"id": "s_11", "type": "s", "name": "toilet", "noun": null, "adj": null, "desc": "The toilet is shaky.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_12", {"id": "s_12", "type": "s", "name": "bathroom sink", "noun": null, "adj": null, "desc": "The bathroom sink is an unstable piece of garbage.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_13", {"id": "s_13", "type": "s", "name": "towel rack", "noun": null, "adj": null, "desc": "The towel rack is wobbly.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_14", {"id": "s_14", "type": "s", "name": "dumbbell stand", "noun": null, "adj": null, "desc": "The dumbbell stand is an unstable piece of garbage.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_15", {"id": "s_15", "type": "s", "name": "treadmill", "noun": null, "adj": null, "desc": "The treadmill is shaky.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_16", {"id": "s_16", "type": "s", "name": "pool equipment rack", "noun": null, "adj": null, "desc": "The pool equipment rack is durable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_17", {"id": "s_17", "type": "s", "name": "table for pool chemicals", "noun": null, "adj": null, "desc": "The table for pool chemicals is stable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_2", {"id": "s_2", "type": "s", "name": "game consol cabinet", "noun": null, "adj": null, "desc": "The game consol cabinet is stable.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_3", {"id": "s_3", "type": "s", "name": "cook table", "noun": null, "adj": null, "desc": "The cook table is unstable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_4", {"id": "s_4", "type": "s", "name": "bookcase", "noun": null, "adj": null, "desc": "The bookcase is undependable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_5", {"id": "s_5", "type": "s", "name": "reading table", "noun": null, "adj": null, "desc": "The reading table is undependable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_6", {"id": "s_6", "type": "s", "name": "dining table", "noun": null, "adj": null, "desc": "The dining table is reliable.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_7", {"id": "s_7", "type": "s", "name": "king size bed", "noun": null, "adj": null, "desc": "The king size bed is shaky.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_8", {"id": "s_8", "type": "s", "name": "bedside table", "noun": null, "adj": null, "desc": "The bedside table is unstable.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_9", {"id": "s_9", "type": "s", "name": "kids bed", "noun": null, "adj": null, "desc": "The kids bed is solid.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["f_0", {"id": "f_0", "type": "f", "name": "milk", "noun": null, "adj": null, "desc": "The milk looks delicious.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["f_1", {"id": "f_1", "type": "f", "name": "cheese", "noun": null, "adj": null, "desc": "The cheese looks delectable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_10", {"id": "o_10", "type": "o", "name": "evening dress", "noun": null, "adj": null, "desc": "The evening dress seems to fit in here", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_12", {"id": "o_12", "type": "o", "name": "toy sword", "noun": null, "adj": null, "desc": "The toy sword appears to be to fit in here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_16", {"id": "o_16", "type": "o", "name": "yoga mat", "noun": null, "adj": null, "desc": "The yoga mat is modern.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_17", {"id": "o_17", "type": "o", "name": "jump rope", "noun": null, "adj": null, "desc": "The jump rope is cheap looking.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["f_2", {"id": "f_2", "type": "f", "name": "raw meat", "noun": null, "adj": null, "desc": "peace of rew meat", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_0", {"id": "o_0", "type": "o", "name": "TV", "noun": null, "adj": null, "desc": "The TV seems to fit in here", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_1", {"id": "o_1", "type": "o", "name": "decorative pillow", "noun": null, "adj": null, "desc": "The decorative pillow is clean.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_11", {"id": "o_11", "type": "o", "name": "school notebooks", "noun": null, "adj": null, "desc": "The school notebooks looks out of place here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_13", {"id": "o_13", "type": "o", "name": "felt tip pens", "noun": null, "adj": null, "desc": "The felt tip pens is unremarkable.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_14", {"id": "o_14", "type": "o", "name": "deodorant", "noun": null, "adj": null, "desc": "The deodorant seems well matched to everything else here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_15", {"id": "o_15", "type": "o", "name": "toilet paper", "noun": null, "adj": null, "desc": "The toilet paper appears to fit in here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_18", {"id": "o_18", "type": "o", "name": "swimming goggles", "noun": null, "adj": null, "desc": "The swimming goggles is unremarkable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_19", {"id": "o_19", "type": "o", "name": "life ring", "noun": null, "adj": null, "desc": "The life ring is dirty.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_2", {"id": "o_2", "type": "o", "name": "gaming consol", "noun": null, "adj": null, "desc": "The gaming consol appears to be well matched to everything else here", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_20", {"id": "o_20", "type": "o", "name": "chlorine", "noun": null, "adj": null, "desc": "The chlorine appears out of place here", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_21", {"id": "o_21", "type": "o", "name": "dirty plate", "noun": null, "adj": null, "desc": "dirty dining plate", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_24", {"id": "o_24", "type": "o", "name": "business suit", "noun": null, "adj": null, "desc": "expensive grey business suit", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_25", {"id": "o_25", "type": "o", "name": "sleeping lamp", "noun": null, "adj": null, "desc": "soft light sleeping lamp", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_27", {"id": "o_27", "type": "o", "name": "toothbrush", "noun": null, "adj": null, "desc": "ordinary toothbrush", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_28", {"id": "o_28", "type": "o", "name": "dumbbell", "noun": null, "adj": null, "desc": "heavy dumbbell", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_29", {"id": "o_29", "type": "o", "name": "swimming fins", "noun": null, "adj": null, "desc": "blue swimming fins that are used for swimming", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_3", {"id": "o_3", "type": "o", "name": "reading glasses", "noun": null, "adj": null, "desc": "The reading glasses appears well matched to everything else here", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_30", {"id": "o_30", "type": "o", "name": "wet towel", "noun": null, "adj": null, "desc": "red wet bathroom towel", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_4", {"id": "o_4", "type": "o", "name": "detective book", "noun": null, "adj": null, "desc": "The detective book seems to fit in here", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_5", {"id": "o_5", "type": "o", "name": "centerpiece", "noun": null, "adj": null, "desc": "The centerpiece would seem to be out of place here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_6", {"id": "o_6", "type": "o", "name": "candles", "noun": null, "adj": null, "desc": "The candles seems out of place here", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_7", {"id": "o_7", "type": "o", "name": "salt and papper shakers", "noun": null, "adj": null, "desc": "The salt and papper shakers is brand new.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_8", {"id": "o_8", "type": "o", "name": "alarm clock", "noun": null, "adj": null, "desc": "The alarm clock would seem to be out of place here", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_9", {"id": "o_9", "type": "o", "name": "bed lamp", "noun": null, "adj": null, "desc": "The bed lamp is antiquated.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}]], "KB": {"logic": "# Inventory\ntype I {\n    predicates {\n        in(o, I);\n    }\n\n    rules {\n        inventory :: at(P, r) -> at(P, r);  # Nothing changes.\n\n        take :: $at(P, r) & at(o, r) -> in(o, I);\n        drop :: $at(P, r) & in(o, I) -> at(o, r);\n\n        take/c :: $at(P, r) & $at(c, r) & $open(c) & in(o, c) -> in(o, I);\n        insert :: $at(P, r) & $at(c, r) & $open(c) & in(o, I) -> in(o, c);\n\n        take/s :: $at(P, r) & $at(s, r) & on(o, s) -> in(o, I);\n        put    :: $at(P, r) & $at(s, r) & in(o, I) -> on(o, s);\n\n        examine/I :: in(o, I) -> in(o, I);  # Nothing changes.\n        examine/s :: at(P, r) & $at(s, r) & $on(o, s) -> at(P, r);  # Nothing changes.\n        examine/c :: at(P, r) & $at(c, r) & $open(c) & $in(o, c) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        inventory :: inventory;\n\n        take :: drop;\n        take/c :: insert;\n        take/s :: put;\n\n        examine/I :: examine/I;\n        examine/s :: examine/s;\n        examine/c :: examine/c;\n    }\n\n    inform7 {\n        predicates {\n            in(o, I) :: \"The player carries the {o}\";\n        }\n\n        commands {\n            take :: \"take {o}\" :: \"taking the {o}\";\n            drop :: \"drop {o}\" :: \"dropping the {o}\";\n\n            take/c :: \"take {o} from {c}\" :: \"removing the {o} from the {c}\";\n            insert :: \"insert {o} into {c}\" :: \"inserting the {o} into the {c}\";\n\n            take/s :: \"take {o} from {s}\" :: \"removing the {o} from the {s}\";\n            put :: \"put {o} on {s}\" :: \"putting the {o} on the {s}\";\n\n            inventory :: \"inventory\" :: \"taking inventory\";\n\n            examine/I :: \"examine {o}\" :: \"examining the {o}\";\n            examine/s :: \"examine {o}\" :: \"examining the {o}\";\n            examine/c :: \"examine {o}\" :: \"examining the {o}\";\n        }\n    }\n}\n\n# key\ntype k : o {\n    predicates {\n        match(k, c);\n        match(k, d);\n    }\n\n    constraints {\n        k1 :: match(k, c) & match(k', c) -> fail();\n        k2 :: match(k, c) & match(k, c') -> fail();\n        k3 :: match(k, d) & match(k', d) -> fail();\n        k4 :: match(k, d) & match(k, d') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"key\";\n        }\n\n        predicates {\n            match(k, c) :: \"The matching key of the {c} is the {k}\";\n            match(k, d) :: \"The matching key of the {d} is the {k}\";\n        }\n    }\n}\n\n# door\ntype d : t {\n    predicates {\n        open(d);\n        closed(d);\n        locked(d);\n\n        link(r, d, r);\n    }\n\n    rules {\n        lock/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & closed(d) -> locked(d);\n        unlock/d :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & locked(d) -> closed(d);\n\n        open/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & closed(d) -> open(d) & free(r, r') & free(r', r);\n        close/d  :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & open(d) & free(r, r') & free(r', r) -> closed(d);\n\n        examine/d :: at(P, r) & $link(r, d, r') -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        lock/d :: unlock/d;\n        open/d :: close/d;\n\n        examine/d :: examine/d;\n    }\n\n    constraints {\n        d1 :: open(d)   & closed(d) -> fail();\n        d2 :: open(d)   & locked(d) -> fail();\n        d3 :: closed(d) & locked(d) -> fail();\n\n        # A door can't be used to link more than two rooms.\n        link1 :: link(r, d, r') & link(r, d, r'') -> fail();\n        link2 :: link(r, d, r') & link(r'', d, r''') -> fail();\n\n        # There's already a door linking two rooms.\n        link3 :: link(r, d, r') & link(r, d', r') -> fail();\n\n        # There cannot be more than four doors in a room.\n        too_many_doors :: link(r, d1: d, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        # There cannot be more than four doors in a room.\n        dr1 :: free(r, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr2 :: free(r, r1: r) & free(r, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr3 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr4 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & free(r, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        free1 :: link(r, d, r') & free(r, r') & closed(d) -> fail();\n        free2 :: link(r, d, r') & free(r, r') & locked(d) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"door\";\n            definition :: \"door is openable and lockable.\";\n        }\n\n        predicates {\n            open(d) :: \"The {d} is open\";\n            closed(d) :: \"The {d} is closed\";\n            locked(d) :: \"The {d} is locked\";\n            link(r, d, r') :: \"\";  # No equivalent in Inform7.\n        }\n\n        commands {\n            open/d :: \"open {d}\" :: \"opening {d}\";\n            close/d :: \"close {d}\" :: \"closing {d}\";\n\n            unlock/d :: \"unlock {d} with {k}\" :: \"unlocking {d} with the {k}\";\n            lock/d :: \"lock {d} with {k}\" :: \"locking {d} with the {k}\";\n\n            examine/d :: \"examine {d}\" :: \"examining {d}\";\n        }\n    }\n}\n\n# food\ntype f : o {\n    predicates {\n        edible(f);\n        eaten(f);\n    }\n\n    rules {\n        eat :: in(f, I) -> eaten(f);\n    }\n\n    constraints {\n        eaten1 :: eaten(f) & in(f, I) -> fail();\n        eaten2 :: eaten(f) & in(f, c) -> fail();\n        eaten3 :: eaten(f) & on(f, s) -> fail();\n        eaten4 :: eaten(f) & at(f, r) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"food\";\n            definition :: \"food is edible.\";\n        }\n\n        predicates {\n            edible(f) :: \"The {f} is edible\";\n            eaten(f) :: \"The {f} is nowhere\";\n        }\n\n        commands {\n            eat :: \"eat {f}\" :: \"eating the {f}\";\n        }\n    }\n}\n\n# object\ntype o : t {\n    constraints {\n        obj1 :: in(o, I) & in(o, c) -> fail();\n        obj2 :: in(o, I) & on(o, s) -> fail();\n        obj3 :: in(o, I) & at(o, r) -> fail();\n        obj4 :: in(o, c) & on(o, s) -> fail();\n        obj5 :: in(o, c) & at(o, r) -> fail();\n        obj6 :: on(o, s) & at(o, r) -> fail();\n        obj7 :: at(o, r) & at(o, r') -> fail();\n        obj8 :: in(o, c) & in(o, c') -> fail();\n        obj9 :: on(o, s) & on(o, s') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"object-like\";\n            definition :: \"object-like is portable.\";\n        }\n    }\n}\n\n# room\ntype r {\n    predicates {\n        at(P, r);\n        at(t, r);\n\n        north_of(r, r);\n        west_of(r, r);\n\n        north_of/d(r, d, r);\n        west_of/d(r, d, r);\n\n        free(r, r);\n\n        south_of(r, r') = north_of(r', r);\n        east_of(r, r') = west_of(r', r);\n\n        south_of/d(r, d, r') = north_of/d(r', d, r);\n        east_of/d(r, d, r') = west_of/d(r', d, r);\n    }\n\n    rules {\n        go/north :: at(P, r) & $north_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/south :: at(P, r) & $south_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/east  :: at(P, r) & $east_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/west  :: at(P, r) & $west_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n    }\n\n    reverse_rules {\n        go/north :: go/south;\n        go/west :: go/east;\n    }\n\n    constraints {\n        r1 :: at(P, r) & at(P, r') -> fail();\n        r2 :: at(s, r) & at(s, r') -> fail();\n        r3 :: at(c, r) & at(c, r') -> fail();\n\n        # An exit direction can only lead to one room.\n        nav_rr1 :: north_of(r, r') & north_of(r'', r') -> fail();\n        nav_rr2 :: south_of(r, r') & south_of(r'', r') -> fail();\n        nav_rr3 :: east_of(r, r') & east_of(r'', r') -> fail();\n        nav_rr4 :: west_of(r, r') & west_of(r'', r') -> fail();\n\n        # Two rooms can only be connected once with each other.\n        nav_rrA :: north_of(r, r') & south_of(r, r') -> fail();\n        nav_rrB :: north_of(r, r') & west_of(r, r') -> fail();\n        nav_rrC :: north_of(r, r') & east_of(r, r') -> fail();\n        nav_rrD :: south_of(r, r') & west_of(r, r') -> fail();\n        nav_rrE :: south_of(r, r') & east_of(r, r') -> fail();\n        nav_rrF :: west_of(r, r')  & east_of(r, r') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"room\";\n        }\n\n        predicates {\n            at(P, r) :: \"The player is in {r}\";\n            at(t, r) :: \"The {t} is in {r}\";\n            free(r, r') :: \"\";  # No equivalent in Inform7.\n\n            north_of(r, r') :: \"The {r} is mapped north of {r'}\";\n            south_of(r, r') :: \"The {r} is mapped south of {r'}\";\n            east_of(r, r') :: \"The {r} is mapped east of {r'}\";\n            west_of(r, r') :: \"The {r} is mapped west of {r'}\";\n\n            north_of/d(r, d, r') :: \"South of {r} and north of {r'} is a door called {d}\";\n            south_of/d(r, d, r') :: \"North of {r} and south of {r'} is a door called {d}\";\n            east_of/d(r, d, r') :: \"West of {r} and east of {r'} is a door called {d}\";\n            west_of/d(r, d, r') :: \"East of {r} and west of {r'} is a door called {d}\";\n        }\n\n        commands {\n            go/north :: \"go north\" :: \"going north\";\n            go/south :: \"go south\" :: \"going south\";\n            go/east :: \"go east\" :: \"going east\";\n            go/west :: \"go west\" :: \"going west\";\n        }\n    }\n}\n\n# Player\ntype P {\n    rules {\n        look :: at(P, r) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        look :: look;\n    }\n\n    inform7 {\n        commands {\n            look :: \"look\" :: \"looking\";\n        }\n    }\n}\n\n# thing\ntype t {\n    rules {\n        examine/t :: at(P, r) & $at(t, r) -> at(P, r);\n    }\n\n    reverse_rules {\n        examine/t :: examine/t;\n    }\n\n    inform7 {\n        type {\n            kind :: \"thing\";\n        }\n\n        commands {\n            examine/t :: \"examine {t}\" :: \"examining the {t}\";\n        }\n    }\n}\n\n# container\ntype c : t {\n    predicates {\n        open(c);\n        closed(c);\n        locked(c);\n\n        in(o, c);\n    }\n\n    rules {\n        lock/c   :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & closed(c) -> locked(c);\n        unlock/c :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & locked(c) -> closed(c);\n\n        open/c  :: $at(P, r) & $at(c, r) & closed(c) -> open(c);\n        close/c :: $at(P, r) & $at(c, r) & open(c) -> closed(c);\n    }\n\n    reverse_rules {\n        lock/c :: unlock/c;\n        open/c :: close/c;\n    }\n\n    constraints {\n        c1 :: open(c)   & closed(c) -> fail();\n        c2 :: open(c)   & locked(c) -> fail();\n        c3 :: closed(c) & locked(c) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"container\";\n            definition :: \"containers are openable, lockable and fixed in place. containers are usually closed.\";\n        }\n\n        predicates {\n            open(c) :: \"The {c} is open\";\n            closed(c) :: \"The {c} is closed\";\n            locked(c) :: \"The {c} is locked\";\n\n            in(o, c) :: \"The {o} is in the {c}\";\n        }\n\n        commands {\n            open/c :: \"open {c}\" :: \"opening the {c}\";\n            close/c :: \"close {c}\" :: \"closing the {c}\";\n\n            lock/c :: \"lock {c} with {k}\" :: \"locking the {c} with the {k}\";\n            unlock/c :: \"unlock {c} with {k}\" :: \"unlocking the {c} with the {k}\";\n        }\n    }\n}\n\n# supporter\ntype s : t {\n    predicates {\n        on(o, s);\n    }\n\n    inform7 {\n        type {\n            kind :: \"supporter\";\n            definition :: \"supporters are fixed in place.\";\n        }\n\n        predicates {\n            on(o, s) :: \"The {o} is on the {s}\";\n        }\n    }\n}\n\n", "text_grammars_path": "/home/petranokhin/anaconda3/envs/jericho/lib/python3.10/site-packages/textworld/generator/data/text_grammars"}, "metadata": {"desc": "Generated with textworld.GameMaker."}, "objective": ""}